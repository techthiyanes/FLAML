"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7484],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),g=c(n),m=r,f=g["".concat(s,".").concat(m)]||g[m]||p[m]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4690:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"training_args",title:"automl.nlp.huggingface.training_args"},l=void 0,o={unversionedId:"reference/automl/nlp/huggingface/training_args",id:"reference/automl/nlp/huggingface/training_args",isDocsHomePage:!1,title:"automl.nlp.huggingface.training_args",description:"TrainingArgumentsForAuto Objects",source:"@site/docs/reference/automl/nlp/huggingface/training_args.md",sourceDirName:"reference/automl/nlp/huggingface",slug:"/reference/automl/nlp/huggingface/training_args",permalink:"/FLAML/docs/reference/automl/nlp/huggingface/training_args",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/automl/nlp/huggingface/training_args.md",tags:[],version:"current",frontMatter:{sidebar_label:"training_args",title:"automl.nlp.huggingface.training_args"},sidebar:"referenceSideBar",previous:{title:"trainer",permalink:"/FLAML/docs/reference/automl/nlp/huggingface/trainer"},next:{title:"utils",permalink:"/FLAML/docs/reference/automl/nlp/huggingface/utils"}},s=[{value:"TrainingArgumentsForAuto Objects",id:"trainingargumentsforauto-objects",children:[],level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"trainingargumentsforauto-objects"},"TrainingArgumentsForAuto Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass TrainingArgumentsForAuto(TrainingArguments)\n")),(0,r.kt)("p",null,"FLAML custom TrainingArguments."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"task")," ",(0,r.kt)("em",{parentName:"li"},"str")," - the task name for NLP tasks, e.g., seq-classification, token-classification"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"output_dir")," ",(0,r.kt)("em",{parentName:"li"},"str")," - data root directory for outputing the log, etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"model_path")," ",(0,r.kt)("em",{parentName:"li"},'str, optional, defaults to "facebook/muppet-roberta-base"')," - A string,\nthe path of the language model file, either a path from huggingface\nmodel card huggingface.co/models, or a local path for the model."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fp16")," ",(0,r.kt)("em",{parentName:"li"},'bool, optional, defaults to "False"')," - A bool, whether to use FP16."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"max_seq_length")," ",(0,r.kt)("em",{parentName:"li"},"int, optional, defaults to 128"),' - An integer, the max length of the sequence.\nFor token classification task, this argument will be ineffective.\npad_to_max_length (bool, optional, defaults to "False"):\nwhether to pad all samples to model maximum sentence length.\nIf False, will pad the samples dynamically when batching to the maximum length in the batch.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"per_device_eval_batch_size")," ",(0,r.kt)("em",{parentName:"li"},"int, optional, defaults to 1")," - An integer, the per gpu evaluation batch size."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"label_list")," ",(0,r.kt)("em",{parentName:"li"},"List","[str]",", optional, defaults to None")," - A list of string, the string list of the label names.\nWhen the task is sequence labeling/token classification, there are two formats of the labels:\n(1) The token labels, i.e., ","[B-PER, I-PER, B-LOC]","; (2) Id labels. For (2), need to pass the label_list (e.g., ","[B-PER, I-PER, B-LOC]",")\nto convert the Id to token labels when computing the metric with metric_loss_score.\nSee the example in ",(0,r.kt)("a",{parentName:"li",href:"../../../../Examples/AutoML-NLP#a-simple-token-classification-example"},"a simple token classification example"),".")))}u.isMDXComponent=!0}}]);