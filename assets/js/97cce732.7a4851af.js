"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7671],{3905:function(e,r,t){t.d(r,{Zo:function(){return s},kt:function(){return h}});var n=t(7294);function l(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){l(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,l=function(e,r){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(l[t]=e[t]);return l}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=n.createContext({}),o=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},s=function(e){var r=o(e.components);return n.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,l=e.mdxType,i=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=o(t),h=l,_=p["".concat(u,".").concat(h)]||p[h]||d[h]||i;return t?n.createElement(_,a(a({ref:r},s),{},{components:t})):n.createElement(_,a({ref:r},s))}));function h(e,r){var t=arguments,l=r&&r.mdxType;if("string"==typeof e||l){var i=t.length,a=new Array(i);a[0]=p;var c={};for(var u in r)hasOwnProperty.call(r,u)&&(c[u]=r[u]);c.originalType=e,c.mdxType="string"==typeof e?e:l,a[1]=c;for(var o=2;o<i;o++)a[o]=t[o];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5080:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return o},toc:function(){return s},default:function(){return p}});var n=t(7462),l=t(3366),i=(t(7294),t(3905)),a=["components"],c={sidebar_label:"online_scheduler",title:"scheduler.online_scheduler"},u=void 0,o={unversionedId:"reference/scheduler/online_scheduler",id:"reference/scheduler/online_scheduler",isDocsHomePage:!1,title:"scheduler.online_scheduler",description:"OnlineScheduler Objects",source:"@site/docs/reference/scheduler/online_scheduler.md",sourceDirName:"reference/scheduler",slug:"/reference/scheduler/online_scheduler",permalink:"/FLAML/docs/reference/scheduler/online_scheduler",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/scheduler/online_scheduler.md",tags:[],version:"current",frontMatter:{sidebar_label:"online_scheduler",title:"scheduler.online_scheduler"},sidebar:"referenceSideBar",previous:{title:"trial_runner",permalink:"/FLAML/docs/reference/onlineml/trial_runner"},next:{title:"trial_scheduler",permalink:"/FLAML/docs/reference/scheduler/trial_scheduler"}},s=[{value:"OnlineScheduler Objects",id:"onlinescheduler-objects",children:[{value:"on_trial_result",id:"on_trial_result",children:[],level:4},{value:"choose_trial_to_run",id:"choose_trial_to_run",children:[],level:4}],level:2},{value:"OnlineSuccessiveDoublingScheduler Objects",id:"onlinesuccessivedoublingscheduler-objects",children:[{value:"__init__",id:"__init__",children:[],level:4},{value:"on_trial_result",id:"on_trial_result-1",children:[],level:4}],level:2},{value:"ChaChaScheduler Objects",id:"chachascheduler-objects",children:[{value:"__init__",id:"__init__-1",children:[],level:4},{value:"on_trial_result",id:"on_trial_result-2",children:[],level:4}],level:2}],d={toc:s};function p(e){var r=e.components,t=(0,l.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"onlinescheduler-objects"},"OnlineScheduler Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class OnlineScheduler(TrialScheduler)\n")),(0,i.kt)("p",null,"Class for the most basic OnlineScheduler."),(0,i.kt)("h4",{id:"on_trial_result"},"on","_","trial","_","result"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,i.kt)("p",null,"Report result and return a decision on the trial's status."),(0,i.kt)("h4",{id:"choose_trial_to_run"},"choose","_","trial","_","to","_","run"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def choose_trial_to_run(trial_runner) -> Trial\n")),(0,i.kt)("p",null,"Decide which trial to run next."),(0,i.kt)("h2",{id:"onlinesuccessivedoublingscheduler-objects"},"OnlineSuccessiveDoublingScheduler Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class OnlineSuccessiveDoublingScheduler(OnlineScheduler)\n")),(0,i.kt)("p",null,"class for the OnlineSuccessiveDoublingScheduler algorithm."),(0,i.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(increase_factor: float = 2.0)\n")),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"increase_factor")," - A float of multiplicative factor\nused to increase resource lease. Default is 2.0.")),(0,i.kt)("h4",{id:"on_trial_result-1"},"on","_","trial","_","result"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,i.kt)("p",null,"Report result and return a decision on the trial's status."),(0,i.kt)("h2",{id:"chachascheduler-objects"},"ChaChaScheduler Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class ChaChaScheduler(OnlineSuccessiveDoublingScheduler)\n")),(0,i.kt)("p",null,"class for the ChaChaScheduler algorithm."),(0,i.kt)("h4",{id:"__init__-1"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(increase_factor: float = 2.0, **kwargs)\n")),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"increase_factor")," - A float of multiplicative factor\nused to increase resource lease. Default is 2.0.")),(0,i.kt)("h4",{id:"on_trial_result-2"},"on","_","trial","_","result"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def on_trial_result(trial_runner, trial: Trial, result: Dict)\n")),(0,i.kt)("p",null,"Report result and return a decision on the trial's status."))}p.isMDXComponent=!0}}]);