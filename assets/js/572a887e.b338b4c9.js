"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5927],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},285:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return m}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l=["components"],o={sidebar_label:"trial",title:"tune.trial"},s=void 0,u={unversionedId:"reference/tune/trial",id:"reference/tune/trial",isDocsHomePage:!1,title:"tune.trial",description:"unflatten\\_dict",source:"@site/docs/reference/tune/trial.md",sourceDirName:"reference/tune",slug:"/reference/tune/trial",permalink:"/FLAML/docs/reference/tune/trial",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/tune/trial.md",tags:[],version:"current",frontMatter:{sidebar_label:"trial",title:"tune.trial"},sidebar:"referenceSideBar",previous:{title:"space",permalink:"/FLAML/docs/reference/tune/space"},next:{title:"trial_runner",permalink:"/FLAML/docs/reference/tune/trial_runner"}},c=[{value:"unflatten_dict",id:"unflatten_dict",children:[],level:4},{value:"Trial Objects",id:"trial-objects",children:[{value:"set_status",id:"set_status",children:[],level:4}],level:2}],p={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h4",{id:"unflatten_dict"},"unflatten","_","dict"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'def unflatten_dict(dt, delimiter="/")\n')),(0,i.kt)("p",null,"Unflatten dict. Does not support unflattening lists."),(0,i.kt)("h2",{id:"trial-objects"},"Trial Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Trial()\n")),(0,i.kt)("p",null,"A trial object holds the state for one model training run.\nTrials are themselves managed by the TrialRunner class, which implements\nthe event loop for submitting trial runs to a Ray cluster.\nTrials start in the PENDING state, and transition to RUNNING once started.\nOn error it transitions to ERROR, otherwise TERMINATED on success."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trainable_name")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Name of the trainable object to be executed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"config")," ",(0,i.kt)("em",{parentName:"li"},"dict")," - Provided configuration dictionary with evaluated params."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trial_id")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Unique identifier for the trial."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"local_dir")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Local_dir as passed to tune.run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"logdir")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Directory where the trial logs are saved."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"evaluated_params")," ",(0,i.kt)("em",{parentName:"li"},"dict")," - Evaluated parameters by search algorithm,"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"experiment_tag")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Identifying trial name to show in the console."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"resources")," ",(0,i.kt)("em",{parentName:"li"},"Resources")," - Amount of resources that this trial will use."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"status")," ",(0,i.kt)("em",{parentName:"li"},"str")," - One of PENDING, RUNNING, PAUSED, TERMINATED, ERROR/"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"error_file")," ",(0,i.kt)("em",{parentName:"li"},"str")," - Path to the errors that this trial has raised.")),(0,i.kt)("h4",{id:"set_status"},"set","_","status"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def set_status(status)\n")),(0,i.kt)("p",null,"Sets the status of the trial."))}m.isMDXComponent=!0}}]);