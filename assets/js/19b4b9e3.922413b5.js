"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[603],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=p(r),m=a,d=f["".concat(c,".").concat(m)]||f[m]||s[m]||o;return r?n.createElement(d,l(l({ref:t},u),{},{components:r})):n.createElement(d,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},648:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_label:"utils",title:"nlp.utils"},c=void 0,p={unversionedId:"reference/nlp/utils",id:"reference/nlp/utils",isDocsHomePage:!1,title:"nlp.utils",description:"format\\_vars",source:"@site/docs/reference/nlp/utils.md",sourceDirName:"reference/nlp",slug:"/reference/nlp/utils",permalink:"/FLAML/docs/reference/nlp/utils",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/nlp/utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"utils",title:"nlp.utils"},sidebar:"referenceSideBar",previous:{title:"trainer",permalink:"/FLAML/docs/reference/nlp/huggingface/trainer"},next:{title:"autovw",permalink:"/FLAML/docs/reference/onlineml/autovw"}},u=[{value:"format_vars",id:"format_vars",children:[],level:4},{value:"HPOArgs Objects",id:"hpoargs-objects",children:[],level:2}],s={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"format_vars"},"format","_","vars"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def format_vars(resolved_vars: Dict) -> str\n")),(0,o.kt)("p",null,"Formats the resolved variable dict into a single string."),(0,o.kt)("h2",{id:"hpoargs-objects"},"HPOArgs Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass HPOArgs()\n")),(0,o.kt)("p",null,"The HPO setting."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"output_dir")," ",(0,o.kt)("em",{parentName:"li"},"str")," - data root directory for outputing the log, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"model_path")," ",(0,o.kt)("em",{parentName:"li"},'str, optional, defaults to "facebook/muppet-roberta-base"')," - A string,\nthe path of the language model file, either a path from huggingface\nmodel card huggingface.co/models, or a local path for the model."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fp16")," ",(0,o.kt)("em",{parentName:"li"},'bool, optional, defaults to "False"')," - A bool, whether to use FP16."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"max_seq_length")," ",(0,o.kt)("em",{parentName:"li"},"int, optional, defaults to 128")," - An integer, the max length of the sequence."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ckpt_per_epoch")," ",(0,o.kt)("em",{parentName:"li"},"int, optional, defaults to 1")," - An integer, the number of checkpoints per epoch.")))}f.isMDXComponent=!0}}]);