"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7947],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=s(n),m=a,f=g["".concat(c,".").concat(m)]||g[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1552:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"agent",title:"autogen.agent.agent"},i=void 0,l={unversionedId:"reference/autogen/agent/agent",id:"reference/autogen/agent/agent",isDocsHomePage:!1,title:"autogen.agent.agent",description:"Agent Objects",source:"@site/docs/reference/autogen/agent/agent.md",sourceDirName:"reference/autogen/agent",slug:"/reference/autogen/agent/agent",permalink:"/FLAML/docs/reference/autogen/agent/agent",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/autogen/agent/agent.md",tags:[],version:"current",frontMatter:{sidebar_label:"agent",title:"autogen.agent.agent"},sidebar:"referenceSideBar",next:{title:"chat_agent",permalink:"/FLAML/docs/reference/autogen/agent/chat_agent"}},c=[{value:"Agent Objects",id:"agent-objects",children:[{value:"__init__",id:"__init__",children:[],level:4},{value:"name",id:"name",children:[],level:4},{value:"receive",id:"receive",children:[],level:4}],level:2}],s={toc:c};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"agent-objects"},"Agent Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Agent()\n")),(0,a.kt)("p",null,"(Experimental) An abstract class for AI agent.\nAn agent can communicate with other agents and perform actions.\nDifferent agents can differ in what actions they perform in the ",(0,a.kt)("inlineCode",{parentName:"p"},"receive")," method."),(0,a.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def __init__(name, system_message="")\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," ",(0,a.kt)("em",{parentName:"li"},"str")," - name of the agent"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"system_message")," ",(0,a.kt)("em",{parentName:"li"},"str")," - system message to be sent to the agent")),(0,a.kt)("h4",{id:"name"},"name"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef name()\n")),(0,a.kt)("p",null,"Get the name of the agent."),(0,a.kt)("h4",{id:"receive"},"receive"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def receive(message, sender)\n")),(0,a.kt)("p",null,"Receive a message from another agent.\nThis method is called by the sender.\nIt needs to be overriden by the subclass to perform followup actions."))}p.isMDXComponent=!0}}]);