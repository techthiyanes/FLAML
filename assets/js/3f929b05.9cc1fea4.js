"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7667],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,c=e.mdxType,a=e.originalType,l=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),f=p(n),d=c,m=f["".concat(l,".").concat(d)]||f[d]||u[d]||a;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function d(e,t){var n=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var a=n.length,i=new Array(a);i[0]=f;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:c,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6158:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var r=n(7462),c=(n(7294),n(3905));const a={sidebar_label:"space",title:"tune.space"},i=void 0,o={unversionedId:"reference/tune/space",id:"reference/tune/space",isDocsHomePage:!1,title:"tune.space",description:"is\\_constant",source:"@site/docs/reference/tune/space.md",sourceDirName:"reference/tune",slug:"/reference/tune/space",permalink:"/FLAML/docs/reference/tune/space",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/tune/space.md",tags:[],version:"current",frontMatter:{sidebar_label:"space",title:"tune.space"},sidebar:"referenceSideBar",previous:{title:"sample",permalink:"/FLAML/docs/reference/tune/sample"},next:{title:"trial",permalink:"/FLAML/docs/reference/tune/trial"}},l=[{value:"is_constant",id:"is_constant",children:[],level:4},{value:"define_by_run_func",id:"define_by_run_func",children:[],level:4},{value:"unflatten_hierarchical",id:"unflatten_hierarchical",children:[],level:4},{value:"add_cost_to_space",id:"add_cost_to_space",children:[],level:4},{value:"normalize",id:"normalize",children:[],level:4},{value:"indexof",id:"indexof",children:[],level:4},{value:"complete_config",id:"complete_config",children:[],level:4}],p={toc:l};function s(e){let{components:t,...n}=e;return(0,c.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h4",{id:"is_constant"},"is","_","constant"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def is_constant(space: Union[Dict, List]) -> bool\n")),(0,c.kt)("p",null,"Whether the search space is all constant."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns"),":"),(0,c.kt)("p",null,"  A bool of whether the search space is all constant."),(0,c.kt)("h4",{id:"define_by_run_func"},"define","_","by","_","run","_","func"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'def define_by_run_func(trial, space: Dict, path: str = "") -> Optional[Dict[str, Any]]\n')),(0,c.kt)("p",null,"Define-by-run function to create the search space."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns"),":"),(0,c.kt)("p",null,"  A dict with constant values."),(0,c.kt)("h4",{id:"unflatten_hierarchical"},"unflatten","_","hierarchical"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def unflatten_hierarchical(config: Dict, space: Dict) -> Tuple[Dict, Dict]\n")),(0,c.kt)("p",null,"Unflatten hierarchical config."),(0,c.kt)("h4",{id:"add_cost_to_space"},"add","_","cost","_","to","_","space"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def add_cost_to_space(space: Dict, low_cost_point: Dict, choice_cost: Dict)\n")),(0,c.kt)("p",null,"Update the space in place by adding low_cost_point and choice_cost."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns"),":"),(0,c.kt)("p",null,"  A dict with constant values."),(0,c.kt)("h4",{id:"normalize"},"normalize"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def normalize(config: Dict, space: Dict, reference_config: Dict, normalized_reference_config: Dict, recursive: bool = False)\n")),(0,c.kt)("p",null,"Normalize config in space according to reference_config."),(0,c.kt)("p",null,"Normalize each dimension in config to ","[0,1]","."),(0,c.kt)("h4",{id:"indexof"},"indexof"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def indexof(domain: Dict, config: Dict) -> int\n")),(0,c.kt)("p",null,"Find the index of config in domain.categories."),(0,c.kt)("h4",{id:"complete_config"},"complete","_","config"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"def complete_config(partial_config: Dict, space: Dict, flow2, disturb: bool = False, lower: Optional[Dict] = None, upper: Optional[Dict] = None) -> Tuple[Dict, Dict]\n")),(0,c.kt)("p",null,"Complete partial config in space."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"Returns"),":"),(0,c.kt)("p",null,"  config, space."))}s.isMDXComponent=!0}}]);