"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7636],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(r),m=l,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7458:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var n=r(7462),l=(r(7294),r(3905));const a={sidebar_label:"trial_runner",title:"tune.trial_runner"},i=void 0,o={unversionedId:"reference/tune/trial_runner",id:"reference/tune/trial_runner",isDocsHomePage:!1,title:"tune.trial_runner",description:"Nologger Objects",source:"@site/docs/reference/tune/trial_runner.md",sourceDirName:"reference/tune",slug:"/reference/tune/trial_runner",permalink:"/FLAML/docs/reference/tune/trial_runner",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/tune/trial_runner.md",tags:[],version:"current",frontMatter:{sidebar_label:"trial_runner",title:"tune.trial_runner"},sidebar:"referenceSideBar",previous:{title:"trial",permalink:"/FLAML/docs/reference/tune/trial"},next:{title:"tune",permalink:"/FLAML/docs/reference/tune/tune"}},u=[{value:"Nologger Objects",id:"nologger-objects",children:[],level:2},{value:"SimpleTrial Objects",id:"simpletrial-objects",children:[],level:2},{value:"BaseTrialRunner Objects",id:"basetrialrunner-objects",children:[{value:"get_trials",id:"get_trials",children:[],level:4},{value:"add_trial",id:"add_trial",children:[],level:4},{value:"stop_trial",id:"stop_trial",children:[],level:4}],level:2},{value:"SequentialTrialRunner Objects",id:"sequentialtrialrunner-objects",children:[{value:"step",id:"step",children:[],level:4}],level:2}],s={toc:u};function c(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"nologger-objects"},"Nologger Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Nologger()\n")),(0,l.kt)("p",null,"Logger without logging."),(0,l.kt)("h2",{id:"simpletrial-objects"},"SimpleTrial Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class SimpleTrial(Trial)\n")),(0,l.kt)("p",null,"A simple trial class."),(0,l.kt)("h2",{id:"basetrialrunner-objects"},"BaseTrialRunner Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class BaseTrialRunner()\n")),(0,l.kt)("p",null,"Implementation of a simple trial runner."),(0,l.kt)("p",null,"Note that the caller usually should not mutate trial state directly."),(0,l.kt)("h4",{id:"get_trials"},"get","_","trials"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_trials()\n")),(0,l.kt)("p",null,"Returns the list of trials managed by this TrialRunner."),(0,l.kt)("p",null,"Note that the caller usually should not mutate trial state directly."),(0,l.kt)("h4",{id:"add_trial"},"add","_","trial"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def add_trial(trial)\n")),(0,l.kt)("p",null,"Adds a new trial to this TrialRunner."),(0,l.kt)("p",null,"Trials may be added at any time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"trial")," ",(0,l.kt)("em",{parentName:"li"},"Trial")," - Trial to queue.")),(0,l.kt)("h4",{id:"stop_trial"},"stop","_","trial"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def stop_trial(trial)\n")),(0,l.kt)("p",null,"Stops trial."),(0,l.kt)("h2",{id:"sequentialtrialrunner-objects"},"SequentialTrialRunner Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class SequentialTrialRunner(BaseTrialRunner)\n")),(0,l.kt)("p",null,"Implementation of the sequential trial runner."),(0,l.kt)("h4",{id:"step"},"step"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def step() -> Trial\n")),(0,l.kt)("p",null,"Runs one step of the trial event loop."),(0,l.kt)("p",null,"Callers should typically run this method repeatedly in a loop. They\nmay inspect or modify the runner's state in between calls to step()."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  a trial to run."))}c.isMDXComponent=!0}}]);